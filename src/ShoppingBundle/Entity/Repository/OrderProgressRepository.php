<?php

namespace ShoppingBundle\Entity\Repository;

use Library\Doctrine\BaseEntityRepository;
use ShoppingBundle\Entity\OrderProgress;
use ShoppingBundle\Entity\Order;

/**
 * OrderProgressRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OrderProgressRepository extends BaseEntityRepository
{
    /**
     * @param Order $order
     * @param type $status
     * @param type $currentStatuses
     */
    public function finalizedAllProgresses(Order $order)
    {
        $this->updateProgresses(
            $order, 
            OrderProgress::STATUS_FINALIZED, 
            array(OrderProgress::STATUS_INPROGRESS)
            );
    }
    
    /**
     * @param Order $order
     * @param type $status
     * @param type $currentStatuses
     */
    public function updateProgresses(Order $order, $status, $currentStatuses = array())
    {
        if (count($currentStatuses) === 0) {
            $currentStatuses = array(OrderProgress::STATUS_INPROGRESS);
        }
            
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->update('ShoppingBundle:OrderProgress', 'op')
            ->set('op.status', $status)
            ->where(sprintf(
                'op.order = :order AND op.deleted = 0 AND op.status IN (%s)', 
                implode(',', $currentStatuses))
                )
            ->setParameter('order', $order);

        $qb->getQuery()->execute();
    }     
}
